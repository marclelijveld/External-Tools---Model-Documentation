parameters:
  - name: buildSolution
    type: boolean
    default: false
  - name: resourceRootfolder
    type: string
    default: '$(System.DefaultWorkingDirectory)'
  - name: artifactName
    type: string
    default: 'smartdataplatform'
  - name: execute
    displayName: 'Execute this Job'
    type: boolean
    default: true
  - name: dependsOnJob
    displayName: 'List of jobs this job depends on'
    type: object
    default: []

jobs:
- job: buildModelDocumenterSolution
  displayName: 'build model documenter solutions'
  condition: ${{ parameters.execute }}
  dependsOn: ${{ parameters.dependsOnJob }}

  pool:
    vmImage: windows-latest

  variables:
    buildPlatform: 'Any CPU'
    devCmd: 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\devenv.com'
    disableToolPath: 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\CommonExtensions\Microsoft\VSI\DisableOutOfProcBuild'

  steps:
  - checkout: self
    clean: true
    persistCredentials: true

  # - task: NuGetToolInstaller@1
  
  - task: NuGetCommand@2
    displayName: 'NuGet restore'
    inputs:
      restoreSolution: '${{ parameters.resourceRootfolder }}/ModelDocumenter/*.sln'
  
  # Build model documenter .NET application
  - task: VSBuild@1
    displayName: 'Build .NET project **\*.sln'
    enabled: ${{ parameters.buildSolution }}
    inputs:
      solution: '${{ parameters.resourceRootfolder }}/ModelDocumenter/*.sln'
      msbuildArgs:
      platform:
      configuration:
      clean: true

  - task: BatchScript@1
    displayName: Enable .vdproj Builds
    inputs:
      filename: '"$(disableToolPath)\DisableOutOfProcBuild.exe"'
      workingFolder: '"$(disableToolPath)"'
    
  - script: '"$(devCmd)" ${{ parameters.resourceRootfolder }}\ModelDocumenter\ModelDocumenter.sln /Build "Debug" /Project "ModelDocumenter Installer"' 
    displayName: Build Installer
  
  # Copy dacpac files artifact staging
  - task: CopyFiles@2
    displayName: 'Get all .NET bin file(s)'
    enabled: ${{ parameters.buildSolution }}
    inputs:
      SourceFolder: ${{ parameters.resourceRootfolder }}/ModelDocumenter
      Contents: '**/bin/**/*'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/ModelDocumenter'
      flattenFolders: true

# Load everything into the artifact
  - upload: '$(build.artifactstagingdirectory)/ModelDocumenter'
    artifact: ${{ parameters.artifactName }}
